<?php

namespace api\modules\v7\controllers;

use Yii;
use yii\data\ActiveDataProvider;
use yii\db\Query;
use yii\rest\ActiveController;


class AppPushController extends ActiveController
{

    public $modelClass = 'api\modules\v3\models\AppPush';
    public $serializer = [
        'class' =>  'yii\rest\Serializer',
        'collectionEnvelope'    =>  'items',
    ];

    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $actions = parent::actions(); // TODO: Change the autogenerated stub
        unset($actions['index'],$actions['view'],$actions['create'],$actions['update'],$actions['delete']);
        return $actions;
    }

    public function actionIndex(){

        $model = $this->modelClass;
        $cid = $_GET['cid'];
        $query = $model::find()
            ->where(" cid = '{$cid}' and `type` <> 'SSCOMM_NEWSCOMMENT_DETAIL' and is_read = 1 ")
            ->orderBy('created_at desc');
        return new ActiveDataProvider([
            'query' =>  $query
        ]);
    }

    public function actionView($id){

        $user_id = (new Query())->select('id')->from('{{%user}}')->where(['cid'=>$id])->one();

        $count = (new Query())
            ->select('m.id')
            ->from('{{%app_message}} as m ')
            ->join('left join','{{%app_words}} as w','m.words_id = w.id')
            ->where(" to_id = {$user_id['id']} and from_id <> {$user_id['id']} and is_read = 1 ")
            //->orWhere(" w.user_id= {$user_id['id']} and from_id <> {$user_id['id']} and is_read = 1 ")
            ->count();
        $query['unread_thread_count'] = (int)$count;
        $query_unread_group = Yii::$app->db->createCommand("select count(*) from {{%app_push}} where cid='$id'and type <> 'SSCOMM_NEWSCOMMENT_DETAIL' and is_read = 1 ")->queryScalar();
        $query['other_message_count'] = (int)$query_unread_group;
        $query['unread_count'] = $query['unread_thread_count']+$query['other_message_count'];
        return $query;

    }
}