<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/21
 * Time: 15:10
 */

namespace api\modules\v10\controllers;


use api\modules\v2\models\Profile;
use api\modules\v8\models\RechargeRecord;
use Yii;
use yii\db\Query;
use yii\myhelper\Decode;
use yii\myhelper\Response;
use yii\rest\Controller;

class MakeFriendController extends Controller
{

    public $modelClass = 'api\modules\v6\models\MakeFriend';
    public $serializer = [
        'class' => 'yii\rest\Serializer',
        'collectionEnvelope' => 'items',
    ];

    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actions(){
        $actions = parent::actions();
        unset($actions['index'],$actions['view'],$actions['create'],$actions['update'],$actions['delete']);
        return $actions;
    }

    public function findUserInfo($id){

        $info = (new Query())->from('pre_user_data')->where(['user_id'=>$id])->one();
        return $info;
    }

    public function findUserPro($id){

        $info = (new Query())->from('pre_user_profile')->where(['user_id'=>$id])->one();
        return $info;
    }

    public function actionCreate(){

        $model = new $this->modelClass();
        $model2 = new RechargeRecord();
        $model->load(Yii::$app->getRequest()->getBodyParams(), '');

        //传递用户id，添加 好友关系
        if($model->flag == 0){

            $decode = new Decode();
            if(!$decode->decodeDigit($model->user_id)){
                Response::show(210,'参数不正确');
            }
            //查看用户是否存在
            $userInfo =  $this->findUserInfo($model->user_id);
            $userPro = $this->findUserPro($model->friend_id);

            if(!$userInfo || !$userPro){
                Response::show('201','该用户不存在');
            }

            //查看好友关系是否已经存在
            $is_friend = $model->find()->where(['user_id'=>$model->user_id,'friend_id'=>$model->friend_id,'flag'=>1])->one();
            if(!$is_friend){

                $feed = $userPro['worth'];

                //添加好友关系
                $model->updated_at = time();
                $model->created_at = strtotime('today');
                $model->flag = 1;
                $model->payfor = $feed;
                if(!$model->save()){
                    Response::show('201','添加好友失败');
                }

                $friend_info = Profile::find()->where(['user_id'=>$model->friend_id])->JoinWith('avatar')->One();
                $info['mark'] = $friend_info['mark'];
                $info['require'] = $friend_info['make_friend'];
                $info['introduction'] = $friend_info['signature'];
                $info['worth'] = $friend_info['worth']?$friend_info['worth']:60;
                $info['avatar'] = $friend_info['avatar']['avatar'];
                $info['address'] = $friend_info['address'];

                //保存消费记录
                $model2->user_id =  $model->user_id;
                $model2->type = 'app加好友';
                $model2->number = $feed;
                $model2->subject = 4;
                $model2->status = 10;
                $model2->platform = 1;
                $model2->order_number = date('Ymd').time();
                $model2->created_at = strtotime('today');
                $model2->updated_at = time();
                $model2->extra = json_encode($info);
                $model2->week_time = strtotime('next sunday');
                $model2->mouth_time = mktime(23,59,59,date('m'),date('t'),date('Y'))+1;
                $model2->save();

                //$res = Yii::$app->db->createCommand("update pre_user_data set jiecao_coin = jiecao_coin - '".$feed."' where user_id = ".$model->user_id)->execute();
                /*if($res){
                    Response::show('200','添加好友成功,等待对方回应');
                }*/
                Response::show('200','添加好友成功,等待对方回应');
            }else{
                Response::show('201','您已经添加过该好友');
            }

            //删除好友关系
        }elseif($model->flag == 1){

            //friend_id 传递过来的是用户名
            $friend_name = $model->friend_id;
            $user_name = $model->user_id;

            $decode = new Decode();
            if(!$decode->decodeDigit($user_name)){
                Response::show(210,'参数不正确');
            }
            $fid = $this->getId($friend_name);
            $uid = $this->getId($user_name);

            if(!$fid || !$uid){
                Response::show('201','用户不存在');
            }

            $info = $model::findOne(['user_id'=>$uid,'friend_id'=>$fid]);
            if(!$info){
                Response::show('201','好友关系已解除');
            }

            $res1 = $info->delete();
            if($res1){

                Response::show('200','成功解除好友关系');
            }else{

                $info = $model::findOne(['user_id'=>$fid,'friend_id'=>$uid]);
                if(!$info){
                    Response::show('201','好友关系已解除');
                }

                $res2 = $info->delete();
                if($res2){
                    Response::show('200','成功解除好友关系');
                }else{
                    Response::show('201','好友关系已解除');
                }
            }

        }else{
            Response::show('201','参数错误');
        }

    }

    public function getId($name){
        $fid = (new Query())->select('id')->from('{{%user}}')->where(['username'=>$name])->one();
        return $fid['id'];
    }

}