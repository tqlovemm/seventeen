<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/22
 * Time: 16:03
 */

namespace api\modules\v10\controllers;

use Yii;
use api\modules\v9\models\Label;
use api\modules\v9\models\TurnOverCardPalace;
use api\modules\v9\models\TurnOverCardSuccess;
use api\modules\v4\models\User;
use yii\db\Query;
use yii\helpers\ArrayHelper;
use yii\myhelper\Decode;
use yii\myhelper\Response;
use yii\rest\Controller;

class JudgeController extends Controller
{

    public $modelClass = 'api\modules\v9\models\TurnOverCardJudge';
    public $serializer = [
        'class' =>  'yii\rest\Serializer',
        'collectionEnvelope'    => 'items',
    ];

    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        $action =  parent::actions(); // TODO: Change the autogenerated stub
        unset($action['index'],$action['view'],$action['delete'],$action['update'],$action['create']);
        return $action;
    }

    public function actionIndex(){

        $userId = $_GET['id'];
        $decode = new Decode();
        if(!$decode->decodeDigit($userId)){
            Response::show(210,'参数不正确');
        }
        if(empty($userId)){
            Response::show('201','参数缺失');
        }

        $userInfo = (new Query())->from("{{%user}}")->select("pre_user.id as user_id,username,sex,nickname,avatar,birthdate,address")
            ->leftJoin('{{%user_profile}} as p','pre_user.id=p.user_id')
            ->where(['pre_user.id'=>$userId])
            ->one();
        if(empty($userInfo['nickname'])){
            $userInfo['nickname'] = $userInfo['username'];
        }
        unset($userInfo['username']);
        $data = array();
        $data['userInfo'] = $userInfo;

        $label = Label::find()->select('id as label_id,label')->orderBy('label_id asc')->asArray()->all();
        $data['label'] = $label;
        $str = ['code'=>'200','data'=>$data];
        return $str;
    }

    public function actionCreate(){

        $model = new $this->modelClass();
        $model->load(Yii::$app->request->getBodyParams(),'');
        $decode = new Decode();
        if(!$decode->decodeDigit($model->user_id)){
            Response::show(210,'参数不正确');
        }
        $history = $model::find()->where(['user_id'=>$model->user_id,'for_who'=>$model->for_who,'flag'=>0])->one();

        if(count($history)){
            Response::show('201','请不要重复评论');
        }

        $result = TurnOverCardSuccess::find()
            ->where(['user_id'=>$model->user_id,'beliked'=>$model->for_who])
            ->orWhere(['user_id'=>$model->for_who,'beliked'=>$model->user_id])
            ->one();

        if(count($result)<1){
            Response::show('201','您没有权限评论Ta');
        }
        if(isset($model->judge)){
            $model->judge = htmlspecialchars($model->judge);
        }
        if($model->save()){
            Response::show('200','评论成功');
        }else{
            //$error = $model->errors;
            //return array_values($model->getFirstErrors())[0];
            Response::show('201',array_values($model->getFirstErrors())[0]);
        }

    }

    //后宫
    public function actionView($id){

        $decode = new Decode();
        if(!$decode->decodeDigit($id)){
            Response::show(210,'参数不正确');
        }
        //喜欢我的人数
        $turnModel = TurnOverCardPalace::find()->where(['like'=>$id,'flag'=>1,'is_del'=>0])->orWhere(['like'=>$id,'like_best'=>1,'is_del'=>0]);
        $count = $turnModel->count();
        $user = ArrayHelper::map($turnModel->all(),'user_id','user_id');
   /*     $palaceId = array();
        foreach($count2 as $item){
            $palaceId[] = $item['id'];
        }*/
     /*   if(count($palaceId)){
            $palaceId = implode(',',$palaceId);
            $count3 = TurnOverCardSuccess::find()->where(['beliked'=>$id,'flag'=>0])->andWhere("palace_id not in ({$palaceId})")->count();
        }else{
            $count3 = TurnOverCardSuccess::find()->where(['beliked'=>$id,'flag'=>0])->count();
        }*/

    /*    $palace['count'] = count($count2);
        $user1 = TurnOverCardPalace::find()->where(['like'=>$id,'flag'=>1,'is_del'=>0])->orWhere(['like'=>$id,'like_best'=>1,'is_del'=>0])->limit(3)->all();
        $userId = array();
        if(count($user1)<3){
            $num = 3-count($user1);
            $user2 = TurnOverCardSuccess::find()->where(['beliked'=>$id,'flag'=>0])->limit($num)->all();
            if(count($user2) > 0){
                foreach($user2 as $item){
                    $userId[] = $item['user_id'];
                }
            }
        }*/

     /*   foreach($user as $item){
            $userId[] = $item['user_id'];
        }*/
       // $userIds = implode(',',$userId);

        if(!empty($user)){
            $userInfo = User::find()->select('id,avatar')->where(['in','id',$user])->all();
            $palace['userInfo'] = $userInfo;
        }
        $palace['count'] = $count;
        $groupId = User::find()->select('groupid')->where(['id'=>$id])->one();
        $palace['groupid'] = $groupId['groupid'];
        return $palace;
    }
}